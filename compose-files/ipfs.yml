version: "3.2"
services:
  ipfs-node:
    image: ipfs/go-ipfs:latest
    container_name: $CONT_IPFS_NODE
    restart: on-failure
    volumes:
      - $IPFS_NODE_STAGING:/export
      - $IPFS_NODE_DATA:/data/ipfs
    ports:
      - "$EXPOSE_IP:$IPFS_READONLY_PORT:$IPFS_READONLY_PORT"
      - "$EXPOSE_IP:$IPFS_NODE_PORT:$IPFS_NODE_PORT"
      - "$IPFS_SWARM_PORT:$IPFS_SWARM_PORT"

  ipfs-cluster:
    image: ipfs/ipfs-cluster:latest
    container_name: clueconn-ipfs-cluster
    restart: on-failure
    depends_on:
      - $SERVICE_IPFS_NODE
    environment:
      CLUSTER_PEERNAME: $CLUSTER_PEERNAME
      IPFS_CLUSTER_CONSENSUS: $IPFS_CLUSTER_CONSENSUS
      CLUSTER_SECRET: $CLUSTER_SECRET # From shell variable if set
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/${SERVICE_IPFS_NODE}/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '' # Trust none by default
      CLUSTER_RESTAPI_CORSALLOWEDORIGINS: 'http://localhost'
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # Expose API
      CLUSTER_MONITORPINGINTERVAL: 1m # Peer discovery interval
    ports:
      - "$EXPOSE_IP:$IPFS_CLUSTER_API_PORT:$IPFS_CLUSTER_API_PORT"
      - "$EXPOSE_IP:$IPFS_CLUSTER_TCP_PORT:$IPFS_CLUSTER_TCP_PORT"
    volumes:
      - $CLUSTER_CONFIG_FOLDER:/data/ipfs-cluster
